on:
  push:
    branches:
      - release

jobs:
  check-dist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set Node.js 16.x
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 16.x

      - name: Install dependencies
        run: npm ci

      - name: Rebuild the dist/ directory
        run: npm run package

      - name: Compare the expected and actual dist/ directories
        run: |
          if [ "$(git diff --ignore-space-at-eol dist/ | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build.  See status below:"
            git diff
            exit 1
          fi
        id: diff

      # If index.js was different than expected, upload the expected version as an artifact
      - uses: actions/upload-artifact@v3
        if: ${{ failure() && steps.diff.conclusion == 'failure' }}
        with:
          name: dist
          path: dist/

  remove-old:
    runs-on: ubuntu-latest
    needs: [check-dist]
    steps:
      - name: remove old assets
        uses: actions/github-script@v6
        with:
          retries: 3
          script: |
            const { data } = await github.rest.repos.getRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: 84242624
            });

            for (const asset of data.assets) {
              core.info(`Deleting existing ${asset.name}...`)
              await github.rest.repos.deleteReleaseAsset({
                owner: context.repo.owner,
                repo: context.repo.repo,
                asset_id: asset.id
              })
            }

  test:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    env:
      CARGO_TERM_COLOR: always
    needs: [remove-old]
    outputs:
      winupdate: ${{ steps.build.outputs.winupdate }}
      macupdate: ${{ steps.build.outputs.macupdate }}
      linupdate: ${{ steps.build.outputs.linupdate }}
      winsig: ${{ steps.build.outputs.winsig }}
      macsig: ${{ steps.build.outputs.macsig }}
      linsig: ${{ steps.build.outputs.linsig }}

    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 16
          cache: "npm"
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest' || matrix.platform == 'ubuntu-20.04'
        run: sudo apt-get update && sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
      - name: Load Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: tests/tauri-app/src-tauri
          prefix-key: rust-${{ matrix.platform }}
      - uses: ./
        id: build
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: dW50cnVzdGVkIGNvbW1lbnQ6IHJzaWduIGVuY3J5cHRlZCBzZWNyZXQga2V5ClJXUlRZMEl5N2VicWp0d2dHdDBWb01qaUNGZmNCeC9DNEprQWVDd0F0UWtreFphOE9iZ0FBQkFBQUFBQUFBQUFBQUlBQUFBQTR5V2F1Y2p4aitxLzMrNFlVc0ZDN2x5Tjh3SXAyTEdjOVA1YTVxeUhnMlpiVWV0d1l1TDl6L25kdlBMZDFOWDJQQzQ4UTdlcTRiZFAvbmlGb3I0MFNXUEFWRUNWU1FFMzFsUzVneVNmZ1hIenRDZ21nZzBMZDhnQUJINGh0RlltRmdwYm5RVHFTUGc9Cg==
        with:
          version: "0.3.12"
          releaseId: 84242624
          
          name: tauri-app
          path: "tests/tauri-app"

  update:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - uses: ./
        env:
          TOKEN: ${{ secrets.PAT }}
        with:
          version: "0.3.12"
          releaseId: 84242624

          gistId: be4286054435e085560616fefeaa8a6d
          fileName: test.json
          releaseNotes: ${{ github.event.head_commit.message }}
          releaseTagName: "0.3.1"
          
          winsig: ${{ needs.test.outputs.winsig }}
          macsig: ${{ needs.test.outputs.macsig }}
          linsig: ${{ needs.test.outputs.linsig }}
          winupdate: ${{ needs.test.outputs.winupdate }}
          macupdate: ${{ needs.test.outputs.macupdate }}
          linupdate: ${{ needs.test.outputs.linupdate }}
